'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function getPropAttrs(props) {
	var attrs = {};
	for (var key in props) {
		if (key == 'children') continue;
		attrs[key] = props[key];
	}
	return attrs;
}

var __cls_cache = {};

function cacheCls(name, cls) {
	if (!(name in __cls_cache)) __cls_cache[name] = cls;
	return __cls_cache[name];
}

var PayloadInput = function (_React$Component) {
	_inherits(PayloadInput, _React$Component);

	function PayloadInput() {
		_classCallCheck(this, PayloadInput);

		return _possibleConstructorReturn(this, (PayloadInput.__proto__ || Object.getPrototypeOf(PayloadInput)).apply(this, arguments));
	}

	_createClass(PayloadInput, [{
		key: 'render',
		value: function render() {
			var attrs = getPropAttrs(this.props);
			if (this._pl_input) attrs['pl-input'] = this._pl_input;

			return _react2.default.createElement('div', attrs);
		}
	}]);

	return PayloadInput;
}(_react2.default.Component);

;

var PayloadForm = function (_React$Component2) {
	_inherits(PayloadForm, _React$Component2);

	function PayloadForm() {
		_classCallCheck(this, PayloadForm);

		return _possibleConstructorReturn(this, (PayloadForm.__proto__ || Object.getPrototypeOf(PayloadForm)).apply(this, arguments));
	}

	_createClass(PayloadForm, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var node = _reactDom2.default.findDOMNode(this);
			Payload(Payload.client_key);

			this.pl_form = new Payload.Form({
				form: node
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var attrs = getPropAttrs(this.props);
			if (this._pl_form) attrs['pl-form'] = this._pl_form;

			return _react2.default.createElement(
				'form',
				attrs,
				this.props.children
			);
		}
	}]);

	return PayloadForm;
}(_react2.default.Component);

var PayloadReact = {
	sensitive_fields: {
		'account_number': true, 'routing_number': true,
		'card_code': true, 'cvc': true, 'card_number': true, 'expiry': true },
	input: new Proxy({}, {
		get: function get(target, name) {
			if (PayloadReact.sensitive_fields[name]) return cacheCls('input.' + name, function (_PayloadInput) {
				_inherits(_class, _PayloadInput);

				function _class() {
					_classCallCheck(this, _class);

					return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
				}

				_createClass(_class, [{
					key: 'render',
					value: function render() {
						this._pl_input = name;
						return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'render', this).call(this);
					}
				}]);

				return _class;
			}(PayloadInput));else return cacheCls('input.' + name, function (_React$Component3) {
				_inherits(_class2, _React$Component3);

				function _class2() {
					_classCallCheck(this, _class2);

					return _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).apply(this, arguments));
				}

				_createClass(_class2, [{
					key: 'render',
					value: function render() {
						return _react2.default.createElement('input', _extends({ 'pl-input': name }, this.props));
					}
				}]);

				return _class2;
			}(_react2.default.Component));
		}
	}),

	select: new Proxy({}, {
		get: function get(target, name) {
			return cacheCls('select.' + name, function (_React$Component4) {
				_inherits(_class3, _React$Component4);

				function _class3() {
					_classCallCheck(this, _class3);

					return _possibleConstructorReturn(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).apply(this, arguments));
				}

				_createClass(_class3, [{
					key: 'render',
					value: function render() {
						var attrs = getPropAttrs(this.props);
						return _react2.default.createElement(
							'select',
							_extends({ 'pl-input': name }, attrs),
							this.props.children
						);
					}
				}]);

				return _class3;
			}(_react2.default.Component));
		}
	}),

	form: new Proxy({}, {
		get: function get(target, name) {
			return cacheCls('form.' + name, function (_PayloadForm) {
				_inherits(_class4, _PayloadForm);

				function _class4() {
					_classCallCheck(this, _class4);

					return _possibleConstructorReturn(this, (_class4.__proto__ || Object.getPrototypeOf(_class4)).apply(this, arguments));
				}

				_createClass(_class4, [{
					key: 'render',
					value: function render() {
						this._pl_form = name;
						return _get(_class4.prototype.__proto__ || Object.getPrototypeOf(_class4.prototype), 'render', this).call(this);
					}
				}]);

				return _class4;
			}(PayloadForm));
		}
	})
};

exports.default = PayloadReact;