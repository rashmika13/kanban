{"ast":null,"code":"var _jsxFileName = \"/Users/rashmikarashmika/sei/kanban/src/components/Board.js\";\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport List from \"./list\";\nimport store from \"../utils/store\";\nimport StoreApi from \"../utils/storeApi\";\nimport InputContainer from \"./input-column\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport TopBar from \"./TopBar\";\nimport SideMenu from \"./SideMenu\";\nimport DragPhoto from \"../components/CardActions/DragPhoto\";\nconst useStyle = makeStyles(theme => ({\n  root: {\n    minHeight: \"100vh\",\n    background: \"#cae2ea\",\n    width: \"100%\",\n    overflowY: \"auto\"\n  },\n  listContainer: {\n    display: \"flex\"\n  }\n}));\nexport default function App() {\n  const [data, setData] = useState(store);\n  const [open, setOpen] = useState(false);\n  const [backgroundUrl, setBackgroundUrl] = useState(\"\");\n  const classes = useStyle();\n\n  const addMoreCard = (title, listId) => {\n    console.log(title, listId);\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title\n    };\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newCard];\n    const newState = { ...data,\n      lists: { ...data.lists,\n        [listId]: list\n      }\n    };\n    setData(newState);\n  };\n\n  const addMoreList = title => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: []\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: { ...data.lists,\n        [newListId]: newList\n      }\n    };\n    setData(newState);\n  };\n\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n    const newState = { ...data,\n      lists: { ...data.lists,\n        [listId]: list\n      }\n    };\n    setData(newState);\n  };\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId,\n      type\n    } = result;\n    console.log(\"destination\", destination, \"source\", source, draggableId);\n\n    if (!destination) {\n      return;\n    }\n\n    if (type === \"list\") {\n      const newListIds = data.listIds;\n      newListIds.splice(source.index, 1);\n      newListIds.splice(destination.index, 0, draggableId);\n      return;\n    }\n\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(card => card.id === draggableId)[0];\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const newSate = { ...data,\n        lists: { ...data.lists,\n          [sourceList.id]: destinationList\n        }\n      };\n      setData(newSate);\n    } else {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const newState = { ...data,\n        lists: { ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinationList.id]: destinationList\n        }\n      };\n      setData(newState);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StoreApi.Provider, {\n    value: {\n      addMoreCard,\n      addMoreList,\n      updateListTitle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    style: {\n      backgroundImage: `url(${backgroundUrl})`,\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TopBar, {\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"app\",\n    type: \"list\",\n    direction: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classes.listContainer,\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }), data.listIds.map((listId, index) => {\n    const list = data.lists[listId];\n    return /*#__PURE__*/React.createElement(List, {\n      list: list,\n      key: listId,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }\n    });\n  }), /*#__PURE__*/React.createElement(InputContainer, {\n    type: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), provided.placeholder))), /*#__PURE__*/React.createElement(DragPhoto, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SideMenu, {\n    setBackgroundUrl: setBackgroundUrl,\n    open: open,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/rashmikarashmika/sei/kanban/src/components/Board.js"],"names":["React","useState","v4","uuid","List","store","StoreApi","InputContainer","makeStyles","DragDropContext","Droppable","TopBar","SideMenu","DragPhoto","useStyle","theme","root","minHeight","background","width","overflowY","listContainer","display","App","data","setData","open","setOpen","backgroundUrl","setBackgroundUrl","classes","addMoreCard","title","listId","console","log","newCardId","newCard","id","list","lists","cards","newState","addMoreList","newListId","newList","listIds","updateListTitle","onDragEnd","result","destination","source","draggableId","type","newListIds","splice","index","sourceList","droppableId","destinationList","draggingCard","filter","card","newSate","backgroundImage","backgroundSize","backgroundRepeat","provided","innerRef","droppableProps","map","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport List from \"./list\";\nimport store from \"../utils/store\";\nimport StoreApi from \"../utils/storeApi\";\nimport InputContainer from \"./input-column\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport TopBar from \"./TopBar\";\nimport SideMenu from \"./SideMenu\";\nimport DragPhoto from \"../components/CardActions/DragPhoto\";\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    background: \"#cae2ea\",\n    width: \"100%\",\n    overflowY: \"auto\",\n  },\n  listContainer: {\n    display: \"flex\",\n  },\n}));\n\nexport default function App() {\n  const [data, setData] = useState(store);\n  const [open, setOpen] = useState(false);\n\n  const [backgroundUrl, setBackgroundUrl] = useState(\"\");\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    console.log(title, listId);\n\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newCard];\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const addMoreList = (title) => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: {\n        ...data.lists,\n        [newListId]: newList,\n      },\n    };\n    setData(newState);\n  };\n\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    console.log(\"destination\", destination, \"source\", source, draggableId);\n\n    if (!destination) {\n      return;\n    }\n    if (type === \"list\") {\n      const newListIds = data.listIds;\n      newListIds.splice(source.index, 1);\n      newListIds.splice(destination.index, 0, draggableId);\n      return;\n    }\n\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(\n      (card) => card.id === draggableId\n    )[0];\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const newSate = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: destinationList,\n        },\n      };\n      setData(newSate);\n    } else {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n\n      const newState = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinationList.id]: destinationList,\n        },\n      };\n      setData(newState);\n    }\n  };\n\n  return (\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\n      <div\n        className={classes.root}\n        style={{\n          backgroundImage: `url(${backgroundUrl})`,\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      >\n        <TopBar setOpen={setOpen} />\n\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"app\" type=\"list\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                className={classes.listContainer}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {data.listIds.map((listId, index) => {\n                  const list = data.lists[listId];\n                  return <List list={list} key={listId} index={index} />;\n                })}\n                <InputContainer type=\"list\" />\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <DragPhoto />\n        <SideMenu\n          setBackgroundUrl={setBackgroundUrl}\n          open={open}\n          setOpen={setOpen}\n        />\n      </div>\n    </StoreApi.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}