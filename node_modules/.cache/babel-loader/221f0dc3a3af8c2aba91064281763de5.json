{"ast":null,"code":"var _jsxFileName = \"/Users/rashmikarashmika/sei/kanban/src/components/CardActions/DragPhoto.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Dropzone.css\";\n\nconst Dropzone = () => {\n  const fileInputRef = useRef();\n  const modalImageRef = useRef();\n  const modalRef = useRef();\n  const progressRef = useRef();\n  const uploadRef = useRef();\n  const uploadModalRef = useRef();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [validFiles, setValidFiles] = useState([]);\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    let filteredArr = selectedFiles.reduce((acc, current) => {\n      const x = acc.find(item => item.name === current.name);\n\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    setValidFiles([...filteredArr]);\n  }, [selectedFiles]);\n\n  const preventDefault = e => {\n    e.preventDefault(); // e.stopPropagation();\n  };\n\n  const dragOver = e => {\n    preventDefault(e);\n  };\n\n  const dragEnter = e => {\n    preventDefault(e);\n  };\n\n  const dragLeave = e => {\n    preventDefault(e);\n  };\n\n  const fileDrop = e => {\n    preventDefault(e);\n    const files = e.dataTransfer.files;\n\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const filesSelected = () => {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  const fileInputClicked = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFiles = files => {\n    for (let i = 0; i < files.length; i++) {\n      if (validateFile(files[i])) {\n        setSelectedFiles(prevArray => [...prevArray, files[i]]);\n      } else {\n        files[i][\"invalid\"] = true;\n        setSelectedFiles(prevArray => [...prevArray, files[i]]);\n        setErrorMessage(\"File type not permitted\");\n        setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\n      }\n    }\n  };\n\n  const validateFile = file => {\n    const validTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\", \"image/gif\", \"image/x-icon\"];\n\n    if (validTypes.indexOf(file.type) === -1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const fileSize = size => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = fileName => {\n    return fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) || fileName;\n  };\n\n  const removeFile = name => {\n    const index = validFiles.findIndex(e => e.name === name);\n    const index2 = selectedFiles.findIndex(e => e.name === name);\n    const index3 = unsupportedFiles.findIndex(e => e.name === name);\n    validFiles.splice(index, 1);\n    selectedFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectedFiles([...selectedFiles]);\n\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles([...unsupportedFiles]);\n    }\n  };\n\n  const openImageModal = file => {\n    const reader = new FileReader();\n    modalRef.current.style.display = \"block\";\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      modalImageRef.current.style.backgroundImage = `url(${e.target.result})`;\n    };\n  };\n\n  const closeModal = () => {\n    modalRef.current.style.display = \"none\";\n    modalImageRef.current.style.backgroundImage = \"none\";\n  };\n\n  const uploadFiles = async () => {\n    uploadModalRef.current.style.display = \"block\";\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\n\n    for (let i = 0; i < validFiles.length; i++) {\n      const formData = new FormData();\n      formData.append(\"image\", validFiles[i]);\n      formData.append(\"key\", \"\");\n      axios.post(\"https://api.imgbb.com/1/upload\", formData, {\n        onUploadProgress: progressEvent => {\n          const uploadPercentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);\n          progressRef.current.innerHTML = `${uploadPercentage}%`;\n          progressRef.current.style.width = `${uploadPercentage}%`;\n\n          if (uploadPercentage === 100) {\n            uploadRef.current.innerHTML = \"File(s) Uploaded\";\n            validFiles.length = 0;\n            setValidFiles([...validFiles]);\n            setSelectedFiles([...validFiles]);\n            setUnsupportedFiles([...validFiles]);\n          }\n        }\n      }).catch(() => {\n        uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n        progressRef.current.style.backgroundColor = \"red\";\n      });\n    }\n  };\n\n  const closeUploadModal = () => {\n    uploadModalRef.current.style.display = \"none\";\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, unsupportedFiles.length === 0 && validFiles.length ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"file-upload-btn\",\n    onClick: () => uploadFiles(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Upload Files\") : \"\", unsupportedFiles.length ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Please remove all unsupported files.\") : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-container\",\n    onDragOver: dragOver,\n    onDragEnter: dragEnter,\n    onDragLeave: dragLeave,\n    onDrop: fileDrop,\n    onClick: fileInputClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drop-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }), \"Drag & Drop files here or click to select file(s)\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInputRef,\n    className: \"file-input\",\n    type: \"file\",\n    multiple: true,\n    onChange: filesSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-display-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, validFiles.map((data, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-status-bar\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: !data.invalid ? () => openImageModal(data) : () => removeFile(data.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-type-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, fileType(data.name)), /*#__PURE__*/React.createElement(\"span\", {\n    className: `file-name ${data.invalid ? \"file-error\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, data.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"(\", fileSize(data.size), \")\"), \" \", data.invalid && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, \"(\", errorMessage, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-remove\",\n    onClick: () => removeFile(data.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, \"X\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    ref: modalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"close\",\n    onClick: () => closeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-image\",\n    ref: modalImageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-modal\",\n    ref: uploadModalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: () => closeUploadModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    ref: uploadRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    ref: progressRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["/Users/rashmikarashmika/sei/kanban/src/components/CardActions/DragPhoto.js"],"names":["React","useRef","useState","useEffect","axios","Dropzone","fileInputRef","modalImageRef","modalRef","progressRef","uploadRef","uploadModalRef","selectedFiles","setSelectedFiles","validFiles","setValidFiles","unsupportedFiles","setUnsupportedFiles","errorMessage","setErrorMessage","filteredArr","reduce","acc","current","x","find","item","name","concat","preventDefault","e","dragOver","dragEnter","dragLeave","fileDrop","files","dataTransfer","length","handleFiles","filesSelected","fileInputClicked","click","i","validateFile","prevArray","file","validTypes","indexOf","type","fileSize","size","k","sizes","Math","floor","log","parseFloat","pow","toFixed","fileType","fileName","substring","lastIndexOf","removeFile","index","findIndex","index2","index3","splice","openImageModal","reader","FileReader","style","display","readAsDataURL","onload","backgroundImage","target","result","closeModal","uploadFiles","innerHTML","formData","FormData","append","post","onUploadProgress","progressEvent","uploadPercentage","loaded","total","width","catch","backgroundColor","closeUploadModal","map","data","invalid"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./Dropzone.css\";\n\nconst Dropzone = () => {\n  const fileInputRef = useRef();\n  const modalImageRef = useRef();\n  const modalRef = useRef();\n  const progressRef = useRef();\n  const uploadRef = useRef();\n  const uploadModalRef = useRef();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [validFiles, setValidFiles] = useState([]);\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    let filteredArr = selectedFiles.reduce((acc, current) => {\n      const x = acc.find((item) => item.name === current.name);\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    setValidFiles([...filteredArr]);\n  }, [selectedFiles]);\n\n  const preventDefault = (e) => {\n    e.preventDefault();\n    // e.stopPropagation();\n  };\n\n  const dragOver = (e) => {\n    preventDefault(e);\n  };\n\n  const dragEnter = (e) => {\n    preventDefault(e);\n  };\n\n  const dragLeave = (e) => {\n    preventDefault(e);\n  };\n\n  const fileDrop = (e) => {\n    preventDefault(e);\n    const files = e.dataTransfer.files;\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const filesSelected = () => {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  const fileInputClicked = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFiles = (files) => {\n    for (let i = 0; i < files.length; i++) {\n      if (validateFile(files[i])) {\n        setSelectedFiles((prevArray) => [...prevArray, files[i]]);\n      } else {\n        files[i][\"invalid\"] = true;\n        setSelectedFiles((prevArray) => [...prevArray, files[i]]);\n        setErrorMessage(\"File type not permitted\");\n        setUnsupportedFiles((prevArray) => [...prevArray, files[i]]);\n      }\n    }\n  };\n\n  const validateFile = (file) => {\n    const validTypes = [\n      \"image/jpeg\",\n      \"image/jpg\",\n      \"image/png\",\n      \"image/gif\",\n      \"image/x-icon\",\n    ];\n    if (validTypes.indexOf(file.type) === -1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const fileSize = (size) => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = (fileName) => {\n    return (\n      fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) ||\n      fileName\n    );\n  };\n\n  const removeFile = (name) => {\n    const index = validFiles.findIndex((e) => e.name === name);\n    const index2 = selectedFiles.findIndex((e) => e.name === name);\n    const index3 = unsupportedFiles.findIndex((e) => e.name === name);\n    validFiles.splice(index, 1);\n    selectedFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectedFiles([...selectedFiles]);\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles([...unsupportedFiles]);\n    }\n  };\n\n  const openImageModal = (file) => {\n    const reader = new FileReader();\n    modalRef.current.style.display = \"block\";\n    reader.readAsDataURL(file);\n    reader.onload = function (e) {\n      modalImageRef.current.style.backgroundImage = `url(${e.target.result})`;\n    };\n  };\n\n  const closeModal = () => {\n    modalRef.current.style.display = \"none\";\n    modalImageRef.current.style.backgroundImage = \"none\";\n  };\n\n  const uploadFiles = async () => {\n    uploadModalRef.current.style.display = \"block\";\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\n    for (let i = 0; i < validFiles.length; i++) {\n      const formData = new FormData();\n      formData.append(\"image\", validFiles[i]);\n      formData.append(\"key\", \"\");\n\n      axios\n        .post(\"https://api.imgbb.com/1/upload\", formData, {\n          onUploadProgress: (progressEvent) => {\n            const uploadPercentage = Math.floor(\n              (progressEvent.loaded / progressEvent.total) * 100\n            );\n            progressRef.current.innerHTML = `${uploadPercentage}%`;\n            progressRef.current.style.width = `${uploadPercentage}%`;\n\n            if (uploadPercentage === 100) {\n              uploadRef.current.innerHTML = \"File(s) Uploaded\";\n              validFiles.length = 0;\n              setValidFiles([...validFiles]);\n              setSelectedFiles([...validFiles]);\n              setUnsupportedFiles([...validFiles]);\n            }\n          },\n        })\n        .catch(() => {\n          uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n          progressRef.current.style.backgroundColor = \"red\";\n        });\n    }\n  };\n\n  const closeUploadModal = () => {\n    uploadModalRef.current.style.display = \"none\";\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        {unsupportedFiles.length === 0 && validFiles.length ? (\n          <button className=\"file-upload-btn\" onClick={() => uploadFiles()}>\n            Upload Files\n          </button>\n        ) : (\n          \"\"\n        )}\n        {unsupportedFiles.length ? (\n          <p>Please remove all unsupported files.</p>\n        ) : (\n          \"\"\n        )}\n        <div\n          className=\"drop-container\"\n          onDragOver={dragOver}\n          onDragEnter={dragEnter}\n          onDragLeave={dragLeave}\n          onDrop={fileDrop}\n          onClick={fileInputClicked}\n        >\n          <div className=\"drop-message\">\n            <div className=\"upload-icon\"></div>\n            Drag & Drop files here or click to select file(s)\n          </div>\n          <input\n            ref={fileInputRef}\n            className=\"file-input\"\n            type=\"file\"\n            multiple\n            onChange={filesSelected}\n          />\n        </div>\n        <div className=\"file-display-container\">\n          {validFiles.map((data, i) => (\n            <div className=\"file-status-bar\" key={i}>\n              <div\n                onClick={\n                  !data.invalid\n                    ? () => openImageModal(data)\n                    : () => removeFile(data.name)\n                }\n              >\n                <div className=\"file-type-logo\"></div>\n                <div className=\"file-type\">{fileType(data.name)}</div>\n                <span\n                  className={`file-name ${data.invalid ? \"file-error\" : \"\"}`}\n                >\n                  {data.name}\n                </span>\n                <span className=\"file-size\">({fileSize(data.size)})</span>{\" \"}\n                {data.invalid && (\n                  <span className=\"file-error-message\">({errorMessage})</span>\n                )}\n              </div>\n              <div\n                className=\"file-remove\"\n                onClick={() => removeFile(data.name)}\n              >\n                X\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"modal\" ref={modalRef}>\n        <div className=\"overlay\"></div>\n        <span className=\"close\" onClick={() => closeModal()}>\n          X\n        </span>\n        <div className=\"modal-image\" ref={modalImageRef}></div>\n      </div>\n\n      <div className=\"upload-modal\" ref={uploadModalRef}>\n        <div className=\"overlay\"></div>\n        <div className=\"close\" onClick={() => closeUploadModal()}>\n          X\n        </div>\n        <div className=\"progress-container\">\n          <span ref={uploadRef}></span>\n          <div className=\"progress\">\n            <div className=\"progress-bar\" ref={progressRef}></div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}